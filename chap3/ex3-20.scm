(define (_cons x y)
  (define (set-x! a) (set! x a))
  (define (set-y! a) (set! y a))
  (define (dispatch m)
    (cond
      ((eq? m 'car) x)
      ((eq? m 'cdr) y)
      ((eq? m 'set-car!) set-x!)
      ((eq? m 'set-cdr!) set-y!)
      (else (error "no method")))
    )
  dispatch)
(define (_car z) (z 'car))
(define (_cdr z) (z 'cdr))
(define (_set-car! z new-value) ((z 'set-car!) new-value))
(define (_set-cdr! z new-value) ((z 'set-cdr!) new-value))
(define z (_cons 5 6))
(_car z)
(_cdr z)
(_set-car! z 8)
(_set-cdr! z 9)
